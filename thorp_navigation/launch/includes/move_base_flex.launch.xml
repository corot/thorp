<!-- 
         ROS navigation system
-->
<launch>
  <arg name="base_frame_id"   default="base_footprint"/>
  <arg name="odom_frame_id"   default="odom"/>
  <arg name="global_frame_id" default="map"/>
  <arg name="smooth_velocity" default="true"/>

  <!-- Velocity smoother nodelet; we must provide the absolute name of nodelet manager, as we can be in an application namespace -->
  <node if="$(arg smooth_velocity)"
        pkg="nodelet" type="nodelet" name="vel_smoother" output="screen" respawn="true"
        args="load yocs_velocity_smoother/VelocitySmootherNodelet /mobile_base_nodelet_manager">
    <rosparam file="$(find thorp_navigation)/param/vel_smoother.yaml" command="load"/>
    <remap from="vel_smoother/smooth_cmd_vel" to="/cmd_vel_mux/input/navigation"/>
    <remap from="vel_smoother/robot_cmd_vel" to="/mobile_base/commands/velocity"/>
    <remap from="vel_smoother/odometry" to="/odom"/>
  </node>

  <include file="$(find turtlebot_navigation)/launch/includes/safety_controller.launch.xml"/>  <!-- TODO -->

  <!-- Move base flex and legacy relay to provide backward compatibility with move base -->
  <node pkg="mbf_costmap_nav" type="mbf_costmap_nav" name="move_base_flex" output="screen" respawn="true">
    <rosparam file="$(find thorp_navigation)/param/move_base_flex/common_costmap.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find thorp_navigation)/param/move_base_flex/common_costmap.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find thorp_navigation)/param/move_base_flex/global_costmap.yaml" command="load"/>
    <rosparam file="$(find thorp_navigation)/param/move_base_flex/local_costmap.yaml"  command="load"/>
    <rosparam file="$(find thorp_navigation)/param/move_base_flex/global_planners.yaml" command="load"/>
    <rosparam file="$(find thorp_navigation)/param/move_base_flex/follower_planner.yaml" command="load"/>
    <rosparam file="$(find thorp_navigation)/param/move_base_flex/dwa_local_planner.yaml" command="load"/>
    <rosparam file="$(find thorp_navigation)/param/move_base_flex/tro_local_planner.yaml" command="load"/>
    <rosparam file="$(find thorp_navigation)/param/move_base_flex/teb_local_planner.yaml" command="load"/>
    <rosparam file="$(find thorp_navigation)/param/move_base_flex/recovery_behaviors.yaml" command="load"/>
    <rosparam file="$(find thorp_navigation)/param/move_base_flex/move_base_flex.yaml" command="load"/>

    <!-- reset frame_id parameters using user input data; required to run STDR simulator -->
    <param name="global_costmap/global_frame" value="$(arg global_frame_id)"/>
    <param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="local_costmap/global_frame" value="$(arg odom_frame_id)"/>
    <param name="local_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="TrajectoryPlannerROS/global_frame_id" value="$(arg odom_frame_id)"/>

    <remap from="bumpers" to="/mobile_base/sensors/bumper_pointcloud"/>
    <remap from="cmd_vel" to="/vel_smoother/raw_cmd_vel" if="$(arg smooth_velocity)"/>
    <remap from="cmd_vel" to="/cmd_vel_mux/input/navigation" unless="$(arg smooth_velocity)"/>
    <remap from="odom" to="/odom"/>
  </node>

  <!-- Path smoother, required to convert a list of waypoints into a path followable by our controllers  -->
  <node pkg="rr_path_smoother" type="rr_path_smoother_node" name="path_smoother" output="screen" respawn="true">
    <rosparam file="$(find thorp_navigation)/param/move_base_flex/path_smoother.yaml" command="load"/>
  </node>

  <node pkg="mbf_costmap_nav" type="move_base_legacy_relay.py" name="move_base" output="screen" respawn="false">
    <rosparam file="$(find thorp_navigation)/param/move_base/move_base_params.yaml" command="load"/>
  </node>
</launch>
