<!-- 
         ROS navigation system using elastic band controller
-->
<launch>
  <arg name="smooth_velocity" default="true"/>

  <!-- Velocity smoother nodelet; we must provide the absolute name of nodelet manager, as we can be in an application namespace -->
  <node if="$(arg smooth_velocity)" pkg="nodelet" type="nodelet" name="vel_smoother" output="screen" respawn="true"
        args="load yocs_velocity_smoother/VelocitySmootherNodelet /mobile_base_nodelet_manager">
    <rosparam file="$(find thorp_navigation)/param/vel_smoother.yaml" command="load"/>
    <remap from="vel_smoother/smooth_cmd_vel" to="/cmd_vel_mux/input/navigation"/>
    <remap from="vel_smoother/robot_cmd_vel" to="/mobile_base/commands/velocity"/>
    <remap from="vel_smoother/odometry" to="/odom"/>
  </node>

  <!-- Move base -->
  <node pkg="move_base" type="move_base" name="move_base" output="screen" respawn="true">
    <rosparam file="$(find thorp_navigation)/param/move_base/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find thorp_navigation)/param/move_base/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find thorp_navigation)/param/move_base/local_costmap_params.yaml"  command="load" />
    <rosparam file="$(find thorp_navigation)/param/move_base/global_costmap_params.yaml" command="load" />

    <rosparam file="$(find thorp_navigation)/param/move_base/base_local_planner_params.yaml" command="load" />
    <rosparam file="$(find thorp_navigation)/param/move_base/move_base_params.yaml" command="load" />

    <rosparam file="$(find thorp_navigation)/param/move_base/eband_planner_params.yaml" command="load"/>
    <param name="base_local_planner" value="eband_local_planner/EBandPlannerROS" />

    <remap from="cmd_vel" to="/vel_smoother/raw_cmd_vel" if="$(arg smooth_velocity)"/>
    <remap from="cmd_vel" to="/cmd_vel_mux/input/navigation" unless="$(arg smooth_velocity)"/>
    <remap from="odom" to="/odom"/>

    <!-- EXPERIMENTS -->
    <!-- <rosparam file="$(find thorp_navigation)/param/move_base/single_costmap_params.yaml" command="load" /> -->
    <!-- Load OMPL planner plugin to the base_global_planner (skipped to avoid dependencies to this package) -->
    <!-- param name="base_global_planner" value="ompl_planner_base/OMPLPlannerBase" /-->
    <!-- Activate publishing of statistics and diagnostics data -->
    <!-- param name="OMPLPlannerBase/publish_diagnostics" value="true" /-->
    <!-- Deactivated interpolation between path-samples -->
    <!-- param name="OMPLPlannerBase/interpolate_path" value="true" /-->

  </node>

  <!-- Publish markers to visualize voxel maps -->
<!--   <node name="global_costmap_viz" pkg="costmap_2d" type="costmap_2d_markers">
    <remap from="voxel_grid" to="move_base/global_costmap/obstacle_layer/voxel_grid"/>
    <remap from="visualization_marker" to="move_base/global_costmap/obstacle_layer/voxel_marker"/>
  </node>
  <node name="local_costmap_viz" pkg="costmap_2d" type="costmap_2d_markers">
    <remap from="voxel_grid" to="move_base/local_costmap/obstacle_layer/voxel_grid"/>
    <remap from="visualization_marker" to="move_base/local_costmap/obstacle_layer/voxel_marker"/>
  </node> -->

  <!-- <node name="global_costmap_viz" pkg="costmap_2d" type="costmap_2d_markers" args="/move_base/global_costmap/obstacle_layer/voxel_grid"/> -->
  <!-- <node name="local_costmap_viz" pkg="costmap_2d" type="costmap_2d_markers" args="/move_base/local_costmap/obstacle_layer/voxel_grid"/> -->

</launch>
