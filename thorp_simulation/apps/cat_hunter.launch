<!--
Cat hunter app:
  - Thorp Gazebo simulation
  - IPA coverage planning
  - Executive SMACH and visualization

Explore the entire environment searching for cats, and attack them whenever found.
 -->

<launch>
  <arg name="app_name" value="cat_hunter"/>
  <arg name="viz_smach" default="false"/>

  <!--  ***** Simulated mobile manipulator Thorp ******  -->

  <include file="$(find thorp_simulation)/launch/thorp_gazebo.launch">
    <arg name="world_name"     value="cat_house"/>
    <arg name="initial_pose_x" value="8.0"/>
    <arg name="initial_pose_y" value="4.0"/>
    <arg name="initial_pose_a" value="0.0"/>
  </include>


  <!--  ***** Object recognition using the Kinect *****  -->

  <include file="$(find thorp_perception)/launch/perception.launch">
    <arg name="pipeline" value="COB"/>
    <arg name="target_objects" value="[cat, dog, horse]"/>
  </include>


  <!--  ****************** Utilities ******************  -->

  <node name="model_markers" pkg="thorp_simulation" type="model_markers.py" output="screen" respawn="true"
        args="cat_orange cat_black"/>


  <!--  ************ IPA coverage planning ************  -->
  <include file="$(find thorp_bringup)/launch/includes/exploration.launch.xml"/>


  <!--  ****** Executive smach and visualization ******  -->

  <node pkg="thorp_smach" type="$(arg app_name).py" name="$(arg app_name)_smach" output="screen" respawn="false">
    <param name="app_name" value="$(arg app_name)"/>
    <param name="viz_smach" value="$(arg viz_smach)"/>
  </node>

  <node if="$(arg viz_smach)"
       pkg="smach_viewer" type="smach_viewer.py" name="$(arg app_name)_smach_viewer" output="screen" respawn="true"/>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find thorp_bringup)/rviz/hunting.rviz" output="screen" respawn="true"/>
</launch>
