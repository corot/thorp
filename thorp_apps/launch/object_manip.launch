<!--
  Thorp's object manipulation app:
  Pickup and place tabletop objects.

  Requirements:
  - Perception and manipulation
  - Keyboard user interaction
 -->

<launch>
  <arg name="app_name"       value="object_manip"/>
  <arg name="simulator"      default="none"/>  <!-- none | gazebo -->
  <arg name="executive"      default="smach"/>  <!-- smach | bt -->
  <arg name="viz_executive"  default="false"/>
  <arg name="start_delay"    default="0.0"/>
  <arg name="record_video"   default="false"/>

  <!-- App-specific parameters -->
  <arg name="object_type"  default="fixed"/>  <!-- fixed | cubes | random -->

  <!--  ******* Components common for all apps ********  -->
  <include file="$(find thorp_apps)/launch/includes/apps_common.launch.xml">
    <arg name="app_name"       value="$(arg app_name)"/>
    <arg name="simulator"      value="$(arg simulator)"/>
    <arg name="executive"      value="$(arg executive)"/>
    <arg name="viz_executive"  value="$(arg viz_executive)"/>
    <arg name="start_delay"    value="$(arg start_delay)"/>
    <arg name="record_video"   value="$(arg record_video)"/>
  </include>

  <!--  As we are not running navigation, provide an empty map and a static global reference frame  -->
  <node pkg="map_server" type="map_server" name="map_server" output="screen" respawn="true" args="$(find thorp_navigation)/maps/empty.yaml"/>

  <node pkg="tf2_ros" type="static_transform_publisher" name="fake_global_reference" output="screen" respawn="true"
        args="0.0 0.0 0.0 0.0 0.0 0.0 map odom"/>

  <group if="$(eval simulator != 'none')">
    <!-- Spawn a table with some tabletop objects -->
    <node pkg="thorp_simulation" type="spawn_gazebo_models.py" name="objects_spawner" output="screen"
          args="playground_$(arg object_type)"/>
  </group>

  <!--  ********* Perception and manipulation *********  -->
  <include file="$(find thorp_perception)/launch/perception.launch">
    <arg name="pipeline" value="RAIL"/>
  </include>

  <include file="$(find thorp_manipulation)/launch/manipulation.launch">
    <arg name="simulation" value="$(eval simulator != 'none')"/>
    <arg name="debug" value="false"/>
  </include>

  <!--  ********** Keyboard user interaction **********  -->
  <!-- We do it required, so it will shut down the whole demo on exit -->
  <node pkg="thorp_bringup" type="keyboard_ctrl.py" name="$(arg app_name)_key_ctrl" output="screen" required="true"
        args="$(arg app_name)">
    <param name="window_geometry" value="360x240"/>
    <param name="window_caption" value="Object manipulation user commands"/>
    <param name="text_font" value="Courier New"/>
    <param name="font_size" value="14"/>
    <rosparam param="valid_commands">['start', 'stop', 'reset', 'clear', 'fold']</rosparam>
  </node>

  <!-- Run RViz and load the default config to see the state of the move_group node and the scene interaction markers -->
  <node pkg="rviz" type="rviz" name="rviz" output="screen" respawn="true"
        args="-d $(find thorp_bringup)/rviz/manipulation.rviz"/>
</launch>
