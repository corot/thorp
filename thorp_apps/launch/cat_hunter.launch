<!--
  Thorp's cat hunter app:
  Explore the entire environment searching for cats, and attack them whenever found.

  Requirements:
  - Navigation
  - Object recognition
  - IPA coverage planning
 -->

<launch>
  <arg name="app_name"       value="cat_hunter"/>
  <arg name="simulator"      default="none"/>  <!-- none | gazebo -->
  <arg name="executive"      default="smach"/>  <!-- smach | bt -->
  <arg name="viz_executive"  default="false"/>
  <arg name="start_delay"    default="0.0"/>
  <arg name="record_video"   default="false"/>
  <arg name="world_name"     default="fun_house"/>
  <arg name="localization"   default="gazebo" if="$(eval simulator == 'gazebo')"/>
  <arg name="initial_pose_x" default="8.5"/>
  <arg name="initial_pose_y" default="6.0"/>
  <arg name="initial_pose_a" default="0.0"/>

  <!-- App-specific parameters -->
  <arg name="cat_models"     default="cat_orange cat_black"/>

  <!--  ******* Components common for all apps ********  -->
  <include file="$(find thorp_apps)/launch/includes/apps_common.launch.xml">
    <arg name="app_name"       value="$(arg app_name)"/>
    <arg name="simulator"      value="$(arg simulator)"/>
    <arg name="world_name"     value="$(arg world_name)"/>
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
    <arg name="executive"      value="$(arg executive)"/>
    <arg name="viz_executive"  value="$(arg viz_executive)"/>
    <arg name="start_delay"    value="$(arg start_delay)"/>
    <arg name="record_video"   value="$(arg record_video)"/>
  </include>

  <group if="$(eval simulator != 'none')">
    <!-- Spawn some cute cats randomly around the house and make them move around -->
    <node pkg="thorp_simulation" type="spawn_gazebo_models.py" name="objects_spawner" output="screen" args="cats"/>
    <node pkg="thorp_simulation" type="cats_controller.py" name="cats_controller" output="screen" respawn="true">
      <param name="target_models" value="$(arg cat_models)"/>
      <param name="prowling_step" value="0.02"/>
      <!-- update period is hardcoded to 0.25 seconds, so this is the only way to change cats speed -->
    </node>

    <!-- Add interactive markers to move the cats on RViz -->
    <node pkg="thorp_simulation" type="model_markers.py" name="model_markers" output="screen" respawn="true">
      <param name="target_models" value="$(arg cat_models)"/>
    </node>
  </group>

  <!--  ***************** Navigation ******************  -->
  <include file="$(find thorp_navigation)/launch/navigation.launch">
    <arg name="smooth_velocity" value="$(eval simulator == 'none')"/>
    <arg name="save_robot_pose" value="$(eval simulator == 'none')"/>
    <arg name="map_name"        value="$(arg world_name)"/>
    <arg name="localization"    value="$(arg localization)"/>
    <arg name="initial_pose_x"  value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y"  value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a"  value="$(arg initial_pose_a)"/>
  </include>

  <!--  ***** Object recognition using the Kinect *****  -->
  <include file="$(find thorp_perception)/launch/perception.launch">
    <arg name="pipeline" value="COB"/>
    <arg name="target_objects" value="[cat, dog, horse]"/>
  </include>

  <!--  ****** IPA coverage planning using kinect *****  -->
  <include file="$(find thorp_bringup)/launch/includes/exploration.launch.xml">
    <arg name="camera" value="kinect"/>
  </include>

  <!-- Run RViz showing exploration, object recognition displays and cat interactive markers -->
  <node pkg="rviz" type="rviz" name="rviz" output="screen" respawn="true"
        args="-d $(find thorp_bringup)/rviz/hunting.rviz"/>
</launch>
