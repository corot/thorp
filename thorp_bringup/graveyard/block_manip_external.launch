<launch>

  <!--  ************ Off-board 3D sensor ***********  -->

  <include file="$(find openni_launch)/launch/openni.launch">
  	<arg name="depth_registration" value="true"/>
  </include>

  <!--  ********* Calibrated 3D sensor pose ********  -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="external_camera_tf" output="screen" respawn="true"
        args="0.0779029 -0.779742 1.09201 -0.227259 0.172085 0.676341 0.679193 base_link camera_link"/>


  <!--  ************* Arm bringup stuff ************* -->

  <param name="robot_description" command="$(find xacro)/xacro '$(find thorp_description)/urdf/standalone_arm.urdf.xacro'"/>
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_pub" output="screen" respawn="true"/>
  <node pkg="turtlebot_arm_bringup" type="fake_joint_pub.py" name="fake_joint_pub" output="screen" respawn="true"/>

  <node pkg="arbotix_python" type="arbotix_driver" name="arbotix" output="screen" respawn="true">
    <rosparam file="$(find thorp_boards)/param/opencm.yaml" command="load"/>
    <param name="sim" value="false"/>
  </node>

  <node pkg="arbotix_python" type="arbotix_gui" name="arbotix_gui" output="screen" respawn="true"/>

  <node pkg="arbotix_controllers" type="gripper_controller" name="gripper_controller" output="screen" respawn="true">
    <!--
     Gripper controller parameters:
     more than the physical properties of the gripper, these values are an ad-hoc configuration
     that works with arbotix_ros/gripper_controller/OneSideGripperModel
      -->
    <param name="model" value="singlesided"/>
    <param name="invert" value="true"/>
    <param name="center" value="0.07"/>
    <param name="pad_width" value="0.025"/>
    <param name="finger_length" value="0.03"/>
    <param name="min_opening" value="0.001"/>
    <param name="max_opening" value="0.05"/>
  </node>


  <!--  ************* Moveit config stuff *************  -->

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find thorp_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="false"/>
  </include>

  <!-- Run the main MoveIt executable to provide move groups -->
  <include file="$(find thorp_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
  </include>


  <!--  *********** Block manipulation demo ***********  -->

  <node pkg="turtlebot_arm_block_manipulation" type="block_detection_action_server" name="block_detection_action_server" output="screen" respawn="true">
    <rosparam param="table_pose">[0.09, 0.0, -0.035]</rosparam>
  </node>

  <node pkg="turtlebot_arm_block_manipulation" type="pick_and_place_action_server" name="pick_and_place_action_server" output="screen" respawn="true">
  </node>

  <node pkg="turtlebot_arm_block_manipulation" type="interactive_manipulation_action_server" name="interactive_manipulation_action_server" output="screen" respawn="true">
    <param name="bump_size" value="0.025"/>
  </node>

  <node pkg="turtlebot_arm_block_manipulation" type="block_manipulation_demo" name="block_manipulation_demo" output="screen" respawn="true">
    <param name="arm_link" value="/arm_base_link"/>
    <param name="gripper_open" value="0.045"/>
    <param name="gripper_closed" value="0.022"/>
    <param name="z_up" value="0.05"/>
    <param name="table_height" value="-0.03"/>
    <param name="block_size" value="0.025"/>
  </node>

  <!-- Run Rviz and load the default config to see the state of the move_group node and the block manipulation interactive markers -->
  <node pkg="rviz" type="rviz" name="rviz" output="screen" respawn="true"
       args="-d $(find turtlebot_arm_block_manipulation)/demo/block_manipulation_demo.rviz"/>
</launch>
