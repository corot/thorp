<launch>
  <arg name="external_camera" default="false"/>

  <include file="$(find thorp_manipulation)/launch/includes/arm.launch.xml"/>

  <include file="$(find thorp_bringup)/launch/includes/state_publisher.launch.xml"/>
 
  <!-- External OpenNI camera -->
  <include if="$(arg external_camera)" file="$(find openni2_launch)/launch/openni2.launch">
    <arg name="camera" value="external_camera"/>
    <arg name="publish_tf" value="false"/>
  </include>

  <!-- Onboard Asus Xtion PRO -->
  <include unless="$(arg external_camera)" file="$(find thorp_bringup)/launch/includes/xtion.launch.xml"/>
  
  <!-- Fake base's wheels joint state, as here we are not running the full robot -->
  <node pkg="thorp_bringup" type="fake_joint_pub.py" name="fake_wheels_joints_pub" output="screen" respawn="true"/>

  <node pkg="rviz" type="rviz" name="rviz" output="screen" respawn="true"
        args="-d $(find thorp_bringup)/rviz/view_model.rviz"/>

  <node pkg="turtlebot_arm_kinect_calibration" type="calibrate_kinect_checkerboard" name="calibrate_kinect_checkerboard" output="screen">
    <param if="$(arg external_camera)" name="fixed_frame" value="/base_footprint"/>
    <param if="$(arg external_camera)" name="camera_frame" value="/external_camera_rgb_frame"/>
    <param unless="$(arg external_camera)" name="fixed_frame" value="/xtion_mount_link"/>
    <param unless="$(arg external_camera)" name="camera_frame" value="/xtion_rgb_frame"/>
    <param name="target_frame" value="/calibration_pattern"/>
    <param name="tip_frame" value="/gripper_link"/>
    <param name="checkerboard_width" value="7"/>
    <param name="checkerboard_height" value="6"/>
    <param name="checkerboard_grid" value="0.027"/>
    <param name="gripper_tip_x" value="-0.002"/>
    <param name="gripper_tip_y" value="0.020"/>
    <param name="gripper_tip_z" value="-0.0185"/>

    <remap if="$(arg external_camera)" from="/camera/rgb/image_raw" to="/external_camera/rgb/image_raw"/>
    <remap if="$(arg external_camera)" from="/camera/rgb/camera_info" to="/external_camera/rgb/camera_info"/>
    <remap unless="$(arg external_camera)" from="/camera/rgb/image_raw" to="/xtion/rgb/image_raw"/>
    <remap unless="$(arg external_camera)" from="/camera/rgb/camera_info" to="/xtion/rgb/camera_info"/>
  </node>

  <!-- Start the Dynamixel servos relaxed, so we can manually move the arm -->
   <node ns="$(arg dynamixel_namespace)"
         pkg="thorp_manipulation" type="dynamixel_relax_all_servos.py" name="dynamixel_relax_all_servos"/>

  <node pkg="image_view" type="image_view" name="checkerboard_image_view" output="screen" respawn="true">
    <param name="autosize" value="true"/>
    <remap from="image" to="/calibrate_kinect_checkerboard/calibration_pattern_out"/>
  </node>
</launch>
