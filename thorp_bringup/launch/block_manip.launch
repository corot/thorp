<launch>
  <arg name="external_camera" default="false"/>

  <!--  ********** 3D sensors (on/off-board) **********  -->

  <include if="$(arg external_camera)" file="$(find thorp_bringup)/launch/includes/xtion.launch.xml">
    <arg name="camera_name" value="external_camera"/>
  </include>

  <include unless="$(arg external_camera)" file="$(find thorp_bringup)/launch/includes/xtion.launch.xml"/>

  <!--  ************* Thorp bringup stuff *************  -->

  <include file="$(find thorp_bringup)/launch/includes/state_publisher.launch.xml"/>

  <include file="$(find thorp_manipulation)/launch/includes/arm.launch.xml"/>

  <!-- Fake base's wheels joint state, as we are not running the full robot by now -->
  <node pkg="thorp_bringup" type="fake_joint_pub.py" name="fake_wheels_joints_pub" output="screen" respawn="true"/>

  <node pkg="arbotix_python" type="arbotix_gui" name="arbotix_gui" output="screen" respawn="true"/>


  <!--  ************* Moveit config stuff *************  -->

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find thorp_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="false"/>
  </include>

  <!-- Run the main MoveIt executable to provide move groups -->
  <include file="$(find thorp_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>  
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
  </include>

  <!--  Fake global reference to make Moveit octomap happy  -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="fake_global_reference" output="screen" respawn="true"
        args="0.0 0.0 0.0 0.0 0.0 0.0 map base_footprint"/>


  <!--  *********** Block manipulation demo ***********  -->

  <node pkg="turtlebot_arm_block_manipulation" type="block_detection_action_server" name="block_detection_action_server" output="screen" respawn="true">
    <rosparam param="table_pose">[0.09, 0.0, 0.035]</rosparam>
    <remap if="$(arg external_camera)" from="/camera/depth_registered/points" to="/external_camera/depth_registered/points"/>
    <remap unless="$(arg external_camera)" from="/camera/depth_registered/points" to="/xtion/depth_registered/points"/>
  </node>

  <node pkg="turtlebot_arm_block_manipulation" type="pick_and_place_action_server" name="pick_and_place_action_server" output="screen" respawn="true">
  </node>
  
  <node pkg="turtlebot_arm_block_manipulation" type="interactive_manipulation_action_server" name="interactive_manipulation_action_server" output="screen" respawn="true">
    <param name="bump_size" value="0.025"/>
  </node>

  <node pkg="turtlebot_arm_block_manipulation" type="block_manipulation_demo" name="block_manipulation_demo" output="screen" respawn="true">
    <param name="arm_link" value="/arm_base_link"/>
    <param name="gripper_open" value="0.045"/>
    <param name="gripper_closed" value="0.022"/>
    <param name="z_up" value="0.1"/>
    <param name="table_height" value="0.035"/>
    <param name="block_size" value="0.025"/>
  </node>

  <!-- Run Rviz and load the default config to see the state of the move_group node and the block manipulation interactive markers -->
  <node pkg="rviz" type="rviz" name="rviz" output="screen" respawn="true"
        args="-d $(find thorp_bringup)/rviz/view_manip.rviz"/>

</launch>
