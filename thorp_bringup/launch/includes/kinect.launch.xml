<!--
  Launch Kinect 3D camera driver
-->

<launch>
  <arg name="camera_name"                       value="kinect"/>

  <!-- Factory-calibrated depth registration -->
  <arg name="depth_registration"              default="true"/>
  <arg     if="$(arg depth_registration)" name="depth" value="depth_registered"/>
  <arg unless="$(arg depth_registration)" name="depth" value="depth"/>

  <!-- Laserscan processing -->
  <arg name="scan_topic"                        value="$(arg camera_name)/scan"/>
  <arg name="scan_processing"                   value="true" />

  <include file="$(find freenect_launch)/launch/freenect.launch">
    <arg name="respawn"                         value="true" />
    <arg name="camera"                          value="$(arg camera_name)"/>
    <arg name="device_id"                       value="A00362A11593108A"/>

    <!-- We only need RGB images and depth registered images -->
    <arg name="publish_tf"                      value="false"/>
    <arg name="depth_registration"              value="true" />
    <arg name="rgb_processing"                  value="true" />
    <arg name="ir_processing"                   value="false"/>
    <arg name="depth_processing"                value="false"/>
    <arg name="depth_registered_processing"     value="true" />
    <arg name="disparity_processing"            value="false"/>
    <arg name="disparity_registered_processing" value="false"/>
  </include>

   <!--                        Laserscan
     This uses lazy subscribing, so will not activate until scan is requested.
   -->
  <group if="$(arg scan_processing)">
    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
          args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet $(arg camera_name)/$(arg camera_name)_nodelet_manager">
      <!-- Pixel rows to use to generate the laserscan. For each column, the scan will
           return the minimum value for those pixels centered vertically in the image. -->
      <param name="scan_height" value="10"/>
      <param name="output_frame_id" value="/$(arg camera_name)_depth_frame"/>
      <param name="range_min" value="0.45"/>
      <remap from="image" to="$(arg camera_name)/$(arg depth)/image_raw"/>
      <remap from="scan" to="$(arg scan_topic)"/>

      <!-- Somehow topics here get prefixed by "$(arg camera_name)" when not inside an app namespace,
           so in this case "$(arg scan_topic)" must provide an absolute topic name (issue #88).
           Probably is a bug in the nodelet manager: https://github.com/ros/nodelet_core/issues/7 -->
      <remap from="$(arg camera_name)/image" to="$(arg camera_name)/$(arg depth)/image_raw"/>
      <remap from="$(arg camera_name)/scan" to="$(arg scan_topic)"/>
    </node>
  </group>
</launch>
