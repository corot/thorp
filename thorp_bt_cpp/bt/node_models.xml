<root>
    <TreeNodesModel>
        <Action ID="ClearCostmaps">
            <input_port name="service_name" type="std::string">name of the ROS service</input_port>
            <input_port name="timeout" type="unsigned int" default="100">timeout to connect to server (milliseconds)</input_port>
        </Action>
        <Action ID="CreatePoseStamped">
            <input_port name="frame" type="std::string"/>
            <input_port name="x" type="double"/>
            <input_port name="y" type="double"/>
            <input_port name="yaw" type="double"/>
            <output_port name="pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="ExePathAction">
            <input_port name="action_name" type="std::string">name of the ROS action client</input_port>
            <input_port name="controller" type="std::string"/>
            <input_port name="goal" type="mbf_msgs::ExePathGoal_&lt;std::allocator&lt;void&gt; &gt;">goal to send to the action server</input_port>
            <input_port name="path" type="nav_msgs::Path_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="error" type="unsigned int"/>
            <output_port name="feedback" type="std::optional&lt;mbf_msgs::ExePathFeedback_&lt;std::allocator&lt;void&gt; &gt; &gt;"/>
        </Action>
        <Action ID="GetPathAction">
            <input_port name="action_name" type="std::string">name of the ROS action client</input_port>
            <input_port name="goal" type="mbf_msgs::GetPathGoal_&lt;std::allocator&lt;void&gt; &gt;">goal to send to the action server</input_port>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="error" type="unsigned int"/>
            <output_port name="feedback" type="std::optional&lt;mbf_msgs::GetPathFeedback_&lt;std::allocator&lt;void&gt; &gt; &gt;"/>
        </Action>
        <Action ID="GetPoseListFront">
            <input_port name="list" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <output_port name="element" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="GetRobotPose">
            <input_port name="timeout" type="double"/>
            <output_port name="error" type="unsigned int"/>
            <output_port name="robot_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="GoToPose">
            <input_port name="action_name" type="std::string">name of the ROS action client</input_port>
            <input_port name="angle_tolerance" type="double"/>
            <input_port name="controller" type="std::string"/>
            <input_port name="dist_tolerance" type="double"/>
            <input_port name="goal" type="mbf_msgs::MoveBaseGoal_&lt;std::allocator&lt;void&gt; &gt;">goal to send to the action server</input_port>
            <input_port name="planner" type="std::string"/>
            <input_port name="pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="error" type="unsigned int"/>
            <output_port name="feedback" type="std::optional&lt;mbf_msgs::MoveBaseFeedback_&lt;std::allocator&lt;void&gt; &gt; &gt;"/>
        </Action>
        <Condition ID="IsBoolTrue">
            <input_port name="input" type="bool"/>
        </Condition>
        <Condition ID="IsListEmpty">
            <input_port name="list" type="std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;"/>
        </Condition>
        <Action ID="PlanRoomExploration">
            <input_port name="action_name" type="std::string">name of the ROS action client</input_port>
            <input_port name="goal" type="ipa_building_msgs::RoomExplorationGoal_&lt;std::allocator&lt;void&gt; &gt;">goal to send to the action server</input_port>
            <input_port name="map_image" type="sensor_msgs::Image_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="map_origin" type="geometry_msgs::Pose_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="map_resolution" type="float"/>
            <input_port name="robot_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="robot_radius" type="float"/>
            <input_port name="room_information_in_meter" type="std::vector&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <input_port name="room_number" type="unsigned int"/>
            <input_port name="segmented_map" type="sensor_msgs::Image_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="coverage_waypoints" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <output_port name="start_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="PlanRoomSequence">
            <input_port name="action_name" type="std::string">name of the ROS action client</input_port>
            <input_port name="goal" type="ipa_building_msgs::FindRoomSequenceWithCheckpointsGoal_&lt;std::allocator&lt;void&gt; &gt;">goal to send to the action server</input_port>
            <input_port name="map_image" type="sensor_msgs::Image_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="map_origin" type="geometry_msgs::Pose_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="map_resolution" type="float"/>
            <input_port name="robot_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="robot_radius" type="float"/>
            <input_port name="room_information_in_pixel" type="std::vector&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="room_sequence" type="std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;"/>
        </Action>
        <Action ID="PopUInt32FromList">
            <output_port name="element" type="unsigned int"/>
            <inout_port name="list" type="std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;"/>
        </Action>
        <Action ID="PoseListSlicing">
            <input_port name="end" type="unsigned long"/>
            <input_port name="start" type="unsigned long"/>
            <inout_port name="list" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
        </Action>
        <Action ID="PushPoseToList">
            <input_port name="element" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <inout_port name="list" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
        </Action>
        <Action ID="RecoveryAction">
            <input_port name="action_name" type="std::string">name of the ROS action client</input_port>
            <input_port name="goal" type="mbf_msgs::RecoveryGoal_&lt;std::allocator&lt;void&gt; &gt;">goal to send to the action server</input_port>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="error" type="unsigned int"/>
            <output_port name="feedback" type="std::optional&lt;mbf_msgs::RecoveryFeedback_&lt;std::allocator&lt;void&gt; &gt; &gt;"/>
        </Action>
        <Action ID="SegmentRooms">
            <input_port name="action_name" type="std::string">name of the ROS action client</input_port>
            <input_port name="goal" type="ipa_building_msgs::MapSegmentationGoal_&lt;std::allocator&lt;void&gt; &gt;">goal to send to the action server</input_port>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="map_image" type="sensor_msgs::Image_&lt;std::allocator&lt;void&gt; &gt;"/>
            <output_port name="map_origin" type="geometry_msgs::Pose_&lt;std::allocator&lt;void&gt; &gt;"/>
            <output_port name="map_resolution" type="float"/>
            <output_port name="robot_radius" type="float"/>
            <output_port name="room_information_in_meter" type="std::vector&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <output_port name="room_information_in_pixel" type="std::vector&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <output_port name="segmented_map" type="sensor_msgs::Image_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="SmoothPath">
            <input_port name="service_name" type="std::string">name of the ROS service</input_port>
            <input_port name="timeout" type="unsigned int" default="100">timeout to connect to server (milliseconds)</input_port>
            <input_port name="waypoints" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <output_port name="path" type="nav_msgs::Path_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Control ID="SuperReactiveSequence"/>
        <Action ID="TrackProgress">
            <input_port name="reached_threshold" type="double"/>
            <input_port name="robot_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="waypoints" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <output_port name="next_waypoint" type="unsigned long"/>
        </Action>
        <Action ID="UseNamedConfig">
            <input_port name="config_name" type="std::string"/>
            <input_port name="source_ns" type="std::string"/>
            <input_port name="target_ns" type="std::string"/>
        </Action>
    </TreeNodesModel>
</root>

