<root>
    <TreeNodesModel>
        <Action ID="AimCannon">
            <input_port name="robot_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="target_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <output_port name="angle" type="float"/>
        </Action>
        <Action ID="ClearCostmaps">
            <input_port name="service_name" type="std::string" default="move_base_flex/clear_costmaps">name of the ROS service</input_port>
            <input_port name="timeout" type="unsigned int" default="100">timeout to connect to server (milliseconds)</input_port>
        </Action>
        <Action ID="ClearGripper">
            <input_port name="service_name" type="std::string" default="clear_gripper">name of the ROS service</input_port>
            <input_port name="timeout" type="unsigned int" default="100">timeout to connect to server (milliseconds)</input_port>
        </Action>
        <Action ID="ClearOctomap">
            <input_port name="service_name" type="std::string" default="clear_octomap">name of the ROS service</input_port>
            <input_port name="timeout" type="unsigned int" default="100">timeout to connect to server (milliseconds)</input_port>
        </Action>
        <Action ID="ClearPlanningScene">
            <input_port name="keep_tray" type="bool"/>
        </Action>
        <Action ID="ClearPoseList">
            <inout_port name="list" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
        </Action>
        <Action ID="CreatePoseStamped">
            <input_port name="frame" type="std::string"/>
            <input_port name="x" type="double"/>
            <input_port name="y" type="double"/>
            <input_port name="yaw" type="double"/>
            <output_port name="pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="DetectObjects">
            <input_port name="action_name" type="std::string" default="object_detection">name of the ROS action client</input_port>
            <input_port name="object_types" type="std::string"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="objects" type="std::vector&lt;moveit_msgs::CollisionObject_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;moveit_msgs::CollisionObject_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <output_port name="surface" type="moveit_msgs::CollisionObject_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="DisplaceObject">
            <input_port name="new_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="object_name" type="std::string"/>
        </Action>
        <Action ID="DragAndDrop">
            <input_port name="action_name" type="std::string" default="drag_and_drop">name of the ROS action client</input_port>
            <input_port name="objects" type="std::vector&lt;moveit_msgs::CollisionObject_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;moveit_msgs::CollisionObject_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="feedback" type="std::optional&lt;thorp_msgs::DragAndDropFeedback_&lt;std::allocator&lt;void&gt; &gt; &gt;"/>
            <output_port name="object_name" type="std::string"/>
            <output_port name="pickup_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <output_port name="place_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="ExePath">
            <input_port name="action_name" type="std::string" default="move_base_flex/exe_path">name of the ROS action client</input_port>
            <input_port name="controller" type="std::string"/>
            <input_port name="path" type="nav_msgs::Path_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="error" type="unsigned int"/>
            <output_port name="feedback" type="std::optional&lt;mbf_msgs::ExePathFeedback_&lt;std::allocator&lt;void&gt; &gt; &gt;"/>
        </Action>
        <Action ID="FireCannon">
            <input_port name="service_name" type="std::string" default="cannon_command">name of the ROS service</input_port>
            <input_port name="shots" type="unsigned int"/>
            <input_port name="timeout" type="unsigned int" default="100">timeout to connect to server (milliseconds)</input_port>
        </Action>
        <Action ID="FollowPose">
            <input_port name="action_name" type="std::string" default="pose_follower/follow">name of the ROS action client</input_port>
            <input_port name="distance" type="float"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <input_port name="stop_at_distance" type="bool"/>
            <input_port name="time_limit" type="float"/>
            <output_port name="error" type="unsigned char"/>
            <output_port name="feedback" type="thorp_msgs::FollowPoseFeedback_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="GetPath">
            <input_port name="action_name" type="std::string" default="move_base_flex/get_path">name of the ROS action client</input_port>
            <input_port name="planner" type="std::string"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <input_port name="target_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <output_port name="error" type="unsigned int"/>
            <output_port name="feedback" type="std::optional&lt;mbf_msgs::GetPathFeedback_&lt;std::allocator&lt;void&gt; &gt; &gt;"/>
        </Action>
        <Action ID="GetPoseListFront">
            <input_port name="list" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <output_port name="element" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="GetRobotPose">
            <input_port name="timeout" type="double"/>
            <output_port name="error" type="unsigned int"/>
            <output_port name="robot_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="GetUIntFromList">
            <input_port name="index" type="int" default="0">Index of the element to return; negative values count from the end</input_port>
            <input_port name="pop" type="bool" default="0">Remove the returned element</input_port>
            <output_port name="element" type="unsigned int"/>
            <inout_port name="list" type="std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;"/>
        </Action>
        <Action ID="GoToPose">
            <input_port name="action_name" type="std::string" default="move_base_flex/move_base">name of the ROS action client</input_port>
            <input_port name="angle_tolerance" type="double"/>
            <input_port name="controller" type="std::string"/>
            <input_port name="dist_tolerance" type="double"/>
            <input_port name="planner" type="std::string"/>
            <input_port name="pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="error" type="unsigned int"/>
            <output_port name="feedback" type="std::optional&lt;mbf_msgs::MoveBaseFeedback_&lt;std::allocator&lt;void&gt; &gt; &gt;"/>
        </Action>
        <Action ID="GripperBusy">
            <input_port name="service_name" type="std::string" default="obj_attached">name of the ROS service</input_port>
            <input_port name="timeout" type="unsigned int" default="100">timeout to connect to server (milliseconds)</input_port>
            <output_port name="attached_object" type="std::string"/>
        </Action>
        <Condition ID="IsBoolTrue">
            <input_port name="input" type="bool"/>
        </Condition>
        <Condition ID="IsPoseListEmpty">
            <input_port name="list" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
        </Condition>
        <Condition ID="IsUIntListEmpty">
            <input_port name="list" type="std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;"/>
        </Condition>
        <Action ID="MonitorObjects">
            <input_port name="max_delay" type="double" default="0.000000">max delay wrt Time::now() (sec); ignored if negative</input_port>
            <input_port name="target_objects" type="std::string">Comma-separated list of objects to track</input_port>
            <input_port name="timeout" type="double" default="1.000000">timeout to subscribe to topic (sec)</input_port>
            <input_port name="topic_name" type="std::string" default="tracked_objects">name of the ROS topic</input_port>
            <output_port name="tracked_object" type="cob_perception_msgs::Detection_&lt;std::allocator&lt;void&gt; &gt;"/>
            <output_port name="tracked_object_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="MoveObjectToTray">
            <input_port name="object_name" type="std::string"/>
            <input_port name="pose_on_tray" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="NextPoseOnTray">
            <input_port name="tray_link" type="std::string"/>
            <output_port name="pose_on_tray" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="ObjectAttached">
            <input_port name="service_name" type="std::string" default="obj_attached">name of the ROS service</input_port>
            <input_port name="timeout" type="unsigned int" default="100">timeout to connect to server (milliseconds)</input_port>
            <output_port name="attached_object" type="std::string"/>
        </Action>
        <Action ID="PickupObject">
            <input_port name="action_name" type="std::string" default="pickup_object">name of the ROS action client</input_port>
            <input_port name="max_effort" type="double"/>
            <input_port name="object_name" type="std::string"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <input_port name="support_surf" type="std::string"/>
            <input_port name="tightening" type="double"/>
            <output_port name="error" type="unsigned int"/>
            <output_port name="feedback" type="std::optional&lt;thorp_msgs::PickupObjectFeedback_&lt;std::allocator&lt;void&gt; &gt; &gt;"/>
        </Action>
        <Action ID="PlaceObject">
            <input_port name="action_name" type="std::string" default="place_object">name of the ROS action client</input_port>
            <input_port name="object_name" type="std::string"/>
            <input_port name="place_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <input_port name="support_surf" type="std::string"/>
            <output_port name="error" type="unsigned int"/>
            <output_port name="feedback" type="std::optional&lt;thorp_msgs::PlaceObjectFeedback_&lt;std::allocator&lt;void&gt; &gt; &gt;"/>
        </Action>
        <Action ID="PlanRoomExploration">
            <input_port name="action_name" type="std::string" default="exploration/room_exploration">name of the ROS action client</input_port>
            <input_port name="map_image" type="sensor_msgs::Image_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="map_origin" type="geometry_msgs::Pose_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="map_resolution" type="float"/>
            <input_port name="robot_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="robot_radius" type="float"/>
            <input_port name="room_information_in_meter" type="std::vector&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <input_port name="room_number" type="unsigned int"/>
            <input_port name="segmented_map" type="sensor_msgs::Image_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="coverage_waypoints" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <output_port name="start_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="PlanRoomSequence">
            <input_port name="action_name" type="std::string" default="exploration/room_sequence_planning">name of the ROS action client</input_port>
            <input_port name="map_image" type="sensor_msgs::Image_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="map_origin" type="geometry_msgs::Pose_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="map_resolution" type="float"/>
            <input_port name="robot_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="robot_radius" type="float"/>
            <input_port name="room_information_in_pixel" type="std::vector&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="room_sequence" type="std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;"/>
        </Action>
        <Action ID="PopPoseFromList">
            <output_port name="element" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <inout_port name="list" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
        </Action>
        <Action ID="PopUIntFromList">
            <output_port name="element" type="unsigned int"/>
            <inout_port name="list" type="std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;"/>
        </Action>
        <Condition ID="PoseInBlackboard">
            <input_port name="key" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Condition>
        <Action ID="PoseListSlicing">
            <input_port name="end" type="unsigned long"/>
            <input_port name="start" type="unsigned long"/>
            <inout_port name="list" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
        </Action>
        <Action ID="PushPoseToList">
            <input_port name="element" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <inout_port name="list" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
        </Action>
        <Action ID="Recovery">
            <input_port name="action_name" type="std::string" default="move_base_flex/recovery">name of the ROS action client</input_port>
            <input_port name="behavior" type="std::string"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="feedback" type="std::optional&lt;mbf_msgs::RecoveryFeedback_&lt;std::allocator&lt;void&gt; &gt; &gt;"/>
        </Action>
        <Action ID="RemoveObject">
            <input_port name="object_name" type="std::string"/>
        </Action>
        <Action ID="SegmentRooms">
            <input_port name="action_name" type="std::string" default="exploration/room_segmentation">name of the ROS action client</input_port>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="map_image" type="sensor_msgs::Image_&lt;std::allocator&lt;void&gt; &gt;"/>
            <output_port name="map_origin" type="geometry_msgs::Pose_&lt;std::allocator&lt;void&gt; &gt;"/>
            <output_port name="map_resolution" type="float"/>
            <output_port name="robot_radius" type="float"/>
            <output_port name="room_information_in_meter" type="std::vector&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <output_port name="room_information_in_pixel" type="std::vector&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;ipa_building_msgs::RoomInformation_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <output_port name="segmented_map" type="sensor_msgs::Image_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="SetArmConfig">
            <input_port name="action_name" type="std::string" default="move_to_target">name of the ROS action client</input_port>
            <input_port name="configuration" type="std::string"/>
            <input_port name="server_timeout" type="double" default="5.000000">timeout to connect to server (seconds)</input_port>
            <output_port name="error" type="unsigned int"/>
            <output_port name="feedback" type="std::optional&lt;thorp_msgs::MoveToTargetFeedback_&lt;std::allocator&lt;void&gt; &gt; &gt;"/>
        </Action>
        <Action ID="SetBool">
            <input_port name="input" type="bool"/>
            <output_port name="output" type="bool"/>
        </Action>
        <Action ID="SetDouble">
            <input_port name="input" type="double"/>
            <output_port name="output" type="double"/>
        </Action>
        <Action ID="SetUnsignedInt">
            <input_port name="input" type="unsigned int"/>
            <output_port name="output" type="unsigned int"/>
        </Action>
        <Action ID="Sleep">
            <input_port name="duration" type="double"/>
        </Action>
        <Action ID="SmoothPath">
            <input_port name="service_name" type="std::string" default="waypoints_path/connect_waypoints">name of the ROS service</input_port>
            <input_port name="timeout" type="unsigned int" default="100">timeout to connect to server (milliseconds)</input_port>
            <input_port name="waypoints" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
            <output_port name="path" type="nav_msgs::Path_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Decorator ID="StoreResult">
            <output_port name="result" type="bool"/>
        </Decorator>
        <Condition ID="TargetReachable">
            <input_port name="follow_feedback" type="thorp_msgs::FollowPoseFeedback_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="max_angle" type="float"/>
            <input_port name="max_dist" type="float"/>
            <input_port name="robot_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Condition>
        <Action ID="TiltCannon">
            <input_port name="angle" type="float"/>
            <input_port name="service_name" type="std::string" default="cannon_command">name of the ROS service</input_port>
            <input_port name="timeout" type="unsigned int" default="100">timeout to connect to server (milliseconds)</input_port>
        </Action>
        <Action ID="TrackProgress">
            <input_port name="reached_threshold" type="double"/>
            <input_port name="robot_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <output_port name="next_waypoint" type="unsigned long"/>
            <inout_port name="waypoints" type="std::vector&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;"/>
        </Action>
        <Action ID="UseNamedConfig">
            <input_port name="config_name" type="std::string"/>
            <input_port name="source_ns" type="std::string"/>
            <input_port name="target_ns" type="std::string"/>
        </Action>
    </TreeNodesModel>
</root>

